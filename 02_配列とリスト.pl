
#  @x を配列、 (31, 41, 59, 26) をリストと呼んでいる。
@x = (31, 41, 59, 2);

$x[3] = 26;         # (31, 41, 59, 26)
print "$x[0]\n";    # 31

push(@x, 53);       #    (31, 41, 59, 26, 53)
pop(@x);            #    (31, 41, 59, 26)
unshift(@x, 0);     # (0, 31, 41, 59, 26)
shift(@x);          #    (31, 41, 59, 26)

@x = reverse(@x);   #    (26, 59, 41, 31)  反転

# 数値 の ソート 降順ソート
@x = sort{$a <=> $a} @x;  # (26, 31, 41, 59)
@x = sort{$b <=> $a} @x;  # (59, 41, 31, 26)
print "@x\n";

# 文字列 の ソート 降順ソート
@s = qw(A B C D);
@s = sort(@s);            # ("A", "B", "C", "D")
@s = sort{$b cmp $a} @s;  # ("D", "C", "B", "A")

# 値の入れ替え
@s[1,2] = @s[2,1];        # qw(D C B A)[2,1] は qw(C B)
print "@s[3,2,1,0]\n";    # A C B D

# chompの末尾\n除去は、リストにも使える。
chomp(@s)   # 一括\n除去

# 多次元配列: 少し難しいので後日やる
